name: CI/CD Pipeline

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Increment version
        id: versioning
        run: |
          VERSION_FILE="VERSION"
          if [ ! -f "$VERSION_FILE" ]; then
            echo "1.0.0" > $VERSION_FILE
          fi

          OLD_VERSION=$(cat $VERSION_FILE)
          IFS='.' read -r MAJOR MINOR PATCH <<< "$OLD_VERSION"
          PATCH=$((PATCH + 1))
          NEW_VERSION="$MAJOR.$MINOR.$PATCH"
          echo "$NEW_VERSION" > $VERSION_FILE

          echo "New version: $NEW_VERSION"
          echo "VERSION=$NEW_VERSION" >> $GITHUB_ENV

      - name: Update pom.xml version
        run: |
          mvn versions:set -DnewVersion=${{ env.VERSION }} -DgenerateBackupPoms=false

      - name: Build JAR
        run: |
          mvn clean package

      - name: Build Docker image
        run: |
          docker build --build-arg VERSION=${{ env.VERSION }} -t my-app:${{ env.VERSION }} .

      - name: Save docker image as artefact
        uses: actions/upload-artifact@v4
        with:
          name: my-app-docker-${{ env.VERSION }}
          path: my-app-${{ env.VERSION }}.tar
      
      # Push Docker image to Docker Hub
      # - name: Log in to Docker Hub
      #   uses: docker/login-action@v3
      #   with:
      #     username: ${{ secrets.DOCKER_USERNAME }}
      #     password: ${{ secrets.DOCKER_PASSWORD }}

      # - name: Tag and push Docker image
      #   run: |
      #     docker tag my-app:${{ env.VERSION }} ${{ secrets.DOCKER_USERNAME }}/my-app:${{ env.VERSION }}
      #     docker push ${{ secrets.DOCKER_USERNAME }}/my-app:${{ env.VERSION }}

          
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ env.VERSION }}
          files: target/my-app-${{ env.VERSION }}.jar
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
